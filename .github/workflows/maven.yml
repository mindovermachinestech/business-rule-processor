name: Java CI with Maven and Spring Boot Build Image Push to Quay.io

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      # Build project using Maven (including Spring Boot build-image)
      - name: Build with Maven and Spring Boot Build Image
        run: mvn -B spring-boot:build-image --file pom.xml

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in to Quay.io
      - name: Login to Quay.io
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      # Extract metadata for Docker
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: quay.io/${{ secrets.QUAY_USERNAME }}/business-rule-processor
          tags: |
            latest
            v1.0.${{ github.run_number }}

      # Tag and Push the Spring Boot Generated Docker Image
      - name: Tag and Push Docker Image
        run: |
          # Rename the image generated by Spring Boot to match the desired tag format
          docker tag business-rule-processor:latest quay.io/${{ secrets.QUAY_USERNAME }}/business-rule-processor:latest
          docker tag business-rule-processor:latest quay.io/${{ secrets.QUAY_USERNAME }}/business-rule-processor:v1.0.${{ github.run_number }}

          # Push the tagged images to Quay.io
          docker push quay.io/${{ secrets.QUAY_USERNAME }}/business-rule-processor:latest
          docker push quay.io/${{ secrets.QUAY_USERNAME }}/business-rule-processor:v1.0.${{ github.run_number }}